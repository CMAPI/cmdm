buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
    }
}

plugins {
    id "com.moowork.node" version "0.11"
}

ext {
    isRelease = project.hasProperty('release') ? true : false

    group   = "org.cmapi.primitives"
    version = '0.0.1.' + (System.getenv("BUILD_NUMBER") ?: "0")

    if (!isRelease) {
        version += '-SNAPSHOT'
    }
    if (!project.hasProperty("empUsername")) {
        empUsername = ''
    }
    if (!project.hasProperty("empPassword")) {
        empPassword = ''
    }
}

configure (rootProject) {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'com.moowork.node'

    repositories {
        jcenter()
    }

    def cmapiGeneratedDir   = file("$buildDir/generated/cmapi")
    def cmapiJsonSchemaFile = file("src/schema/geonotation.schema.json")

    sourceSets.main.java.srcDirs += "$cmapiGeneratedDir/dist/java"

    javadoc {
        source = sourceSets.main.allJava
        failOnError true
        exclude '**/*.md'
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier 'javadoc'
        from javadoc.destinationDir
    }

    task generateJavaBindingsCMAPI(type: NodeTask, description: "Generates the CMAPI interface classes") {
        script = file("src/generator/generate.js")
        //args = ['-debug', '/../schema/geonotation.schema.json']

        execOverrides {
            it.workingDir = cmapiGeneratedDir
        }
        doFirst {
            cmapiGeneratedDir.mkdirs()
        }
        inputs.file "src/generator/generate.js"
        outputs.dir cmapiGeneratedDir
    }
    compileJava.dependsOn generateJavaBindingsCMAPI

    node {
        version  = '4.3.1'
        download = true
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId    = rootProject.ext.group
                artifactId = project.name
                version    = rootProject.ext.version

                artifact jar
                artifact javadocJar
                artifact cmapiJsonSchemaFile
            }
        }
        repositories {
            maven {
                //url "$rootProject.buildDir/_repo"
                url = isRelease ? nexusReleaseUrl : nexusSnapshotUrl

                credentials {
                    username empUsername
                    password empPassword
                }
            }
        }
    }
}

task wrapper(type: Wrapper, description: "Generates gradlew[.bat] scripts") {
    gradleVersion = '2.11'
}

if (JavaVersion.current().isJava8Compatible()) { // disable lint for java8
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}