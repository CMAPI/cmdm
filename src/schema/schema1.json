{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "definitions": {
    "IGeoAltitudeMode": {
      "properties": {
        "altitudeMode": {
          "description": "Enumeration of altitude modes to define how the alititude value in an IGeoPosition alt (altitude) property will be interpreted",
          "enum": ["CLAMP_TO_GROUND", "REALTIVE_TO_GROUND", "ABSOLUTE"]
        }
      }
    },
    "IGeoTimeSpan": {
      "type": "object",
      "description": "Defines a range in time that represents a beginning and end.",
      "properties": {
        "begin": {
          "description": "Starting date time value as defined by http://tools.ietf.org/html/rfc3339",
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "description": "Ending date time value as defined by http://tools.ietf.org/html/rfc3339",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": ["begin", "end"]
    },
    "IGeoPosition": {
      "type": "object",
      "description": "Defines a specific geospatial position derived using WGS-84 latitude longitude",
      "properties": {
        "latitude": {
          "description": "Latitude value in degrees decimal (i.e. 23.4567) derived from WGS-84",
          "type": "number",
          "minimum": -90,
          "maximum": 90,
          "default": 0
        },
        "longitude": {
          "type": "number",
          "description": "Longitude value in degrees decimal (i.e. 23.4567) derived from WGS-84",
          "minimum": -180,
          "maximum": 180,
          "default": 0
        },
        "altitude": {
          "type": "number",
          "description": "A value in meters representing the altitude of the associated position.  This will be interpreted base on the altitudeMode provided in the IGeoAltitudeMode enumeration",
          "default": 0
        }
      },
      "required": ["latitude", "longitude", "altitude"]
    },
    "IGeoPositionGroup": {
      "type": "object",
      "description": "An ordered list of positions representing a 1 or more positions with an associated IGeoAltitudeMode to interpret the altitude values.  In the case of a point, a single position will create a single icon, wheras mulitple positions will create the same icon at multiple positions to be interpreted as a composite feature. For consistency, and IGeoRenderables use an IGeoPositionGroup even when only containing a single position",
      "allOf": [{
        "$ref": "#/definitions/IGeoAltitudeMode"
      }, {
        "properties": {
          "positions": {
            "description": "An ordered list of IGeoPosition objects representing a 1 or more positions with an associated IGeoAltitudeMode to interpret the altitude values.  In the case of a point, a single position will create a single icon, wheras mulitple positions will create the same icon at multiple positions to be interpreted as a composite feature. For consistency, and IGeoRenderables use an IGeoPositionGroup even when only containing a single positions",
            "type": "array",
            "items": {
              "$ref": "#/definitions/IGeoPosition"
            }
          },
          "timeStamp": {
            "description": "Defines a point in time that something occured, was created, or was last updated time value as defined by http://tools.ietf.org/html/rfc3339",
            "type": "string",
            "format": "date-time"
          },
          "timeSpans": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/IGeoTimeSpan"
            }
          },
          "required": ["positions"]
        }
      }]
    },
    "IGeoPositionHistory": {
      "type": "object",
      "description": "An ordered collection of IGeoPositionGroup objects",
      "properties": {
        "positionHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IGeoPositionGroup"
          }
        }
      }
    },
    "IGeoCamera": {
      "type": "object",
      "description": "Defines the virtual camera that views the scene. This element defines the position of the camera relative to the Earth's surface as well as the viewing direction of the camera. The camera position is defined by <longitude>, <latitude>, <altitude>, and either <altitudeMode>. The viewing direction of the camera is defined by <azimuth>, <tilt>, and <roll>. An IGeoCamera provides full six-degrees-of-freedom control over the view, so you can position the Camera in space and then rotate it around the X, Y, and Z axes. Most importantly, you can tilt the camera view so that you're looking above the horizon into the sky. The order of rotation is important. By default, the camera is looking straight down the −Z axis toward the Earth. Before rotations are performed, the camera is translated along the Z axis to <altitude>. The order of transformations is as follows: <altitude> - translate along the Z axis to <altitude><azimuth> - rotate around the Z axis.<tilt> - rotate around the X axis.<roll> - rotate around the Z axis (again). Note that each time a rotation is applied, two of the camera axes change their orientation.",
      "allOf": [{
        "$ref": "#/definitions/IGeoAltitudeMode"
      }, {
        "$ref": "#/definitions/IGeoPosition"
      }, {
        "properties": {
          "tilt": {
            "type": "number",
            "description": "Rotation, in degrees, of the camera around the X axis. A value of 0 indicates that the view is aimed straight down toward the earth (the most common case). A value for 90 for <tilt> indicates that the view is aimed toward the horizon. Values greater than 90 indicate that the view is pointed up into the sky. Values for <tilt> are clamped at +180 degrees",
            "minimum": 0,
            "maximum": 179
          },
          "roll": {
            "type": "number",
            "minimum": 0,
            "maximum": 179,
            "description": "Rotation, in degrees, of the camera around the Z axis. Values range from −180 to +180 degrees"
          },
          "azimuth": {
            "type": "number",
            "minimum": 0,
            "maximum": 359,
            "description": "Direction (that is, North, South, East, West), in degrees. Default=0 (North). Values range from 0 to 360 degrees"
          },
          "range": {
            "type": "number",
            "description": "Distance in meters from the point specified by <longitude>, <latitude>, and <altitude> to the LookAt position"
          }
        }
      }],
      "required": ["tilt", "roll", "range", "azimuth"]
    },
    "IGeoLookAt": {
      "type": "object",
      "description": "The LookAt element positions the 'camera' in relation to the IGeoPosition that is being viewed",
      "allOf": [{
        "$ref": "#/definitions/IGeoAltitudeMode"
      }, {
        "$ref": "#/definitions/IGeoPosition"
      }, {
        "properties": {
          "tilt": {
            "type": "number",
            "description": "Rotation, in degrees, of the camera around the X axis. A value of 0 indicates that the view is aimed straight down toward the earth (the most common case). A value for 90 for <tilt> indicates that the view is aimed toward the horizon. Values greater than 90 indicate that the view is pointed up into the sky. Values for <tilt> are clamped at +180 degrees. ",
            "minimum": 0,
            "maximum": 179
          },
          "azimuth": {
            "type": "number",
            "minimum": 0,
            "maximum": 359,
            "description": "Direction (that is, North, South, East, West), in degrees. Default=0 (North). (See diagram below.) Values range from 0 to 360 degrees"
          },
          "range": {
            "type": "number",
            "description": "Distance in meters from the point specified by IGeoPosition to the LookAt position"
          }
        }
      }],
      "required": ["tilt", "azimuth", "range"]
    },
    "IGeoBounds": {
      "type": "object",
      "properties": {
        "minLongitude": {
          "type": "number",
          "minimum": -180,
          "maximum": 180
        },
        "maxLongitude": {
          "type": "number",
          "minimum": -180,
          "maximum": 180
        },
        "maxLatitude": {
          "type": "number",
          "minimum": -90,
          "maximum": 90
        },
        "minLatitude": {
          "type": "number",
          "minimum": -90,
          "maximum": 90
        }
      },
      "required": ["minLongitude", "maxLongitude", "maxLatitude", "minLatitude"]
    },
    "IGeoView": {
      "type": "object",
      "properties": {
        "camera": {
          "$ref": "#/definitions/IGeoCamera"
        },
        "lookAt": {
          "$ref": "#/definitions/IGeoLookAt"
        },
        "bounds": {
          "$ref": "#/definitions/IGeoBounds"
        },
        "scale": {
          "type": "number",
          "description": "Approximate map scale of current view"
        }
      }
    },
    "IGeoColor": {
      "type": "object",
      "properties": {
        "red": {
          "type": "number",
          "minimum": 0,
          "maximum": 255,
          "default": 0
        },
        "green": {
          "type": "number",
          "minimum": 0,
          "maximum": 255,
          "default": 0
        },
        "blue": {
          "type": "number",
          "minimum": 0,
          "maximum": 255,
          "default": 0
        },
        "alpha": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "default": 0.8
        }
      },
      "required": ["red", "green", "blue", "alpha"]
    },
    "IGeoStrokeStyle": {
      "type": "object",
      "properties": {
        "strokeColor": {
          "$ref": "#/definitions/IGeoColor"
        },
        "strokePattern": {
          "enum": ["solid", "dashed", "dotted"]
        },
        "strokeWidth": {
          "type": "number",
          "description": "Width of the stroke on the screen in pixels",
          "default": 3
        }

      },
      "required": ["strokeColor", "strokePattern", "strokeWidth"]
    },
    "IGeoFillStyle": {
      "type": "object",
      "properties": {
        "fillColor": {
          "$ref": "#/definitions/IGeoColor"
        },
        "fillPattern": {
          "enum": ["solid", "hatched", "crossHatched"],
          "default": "solid"
        }
      },
      "required": ["fillColor", "fillPatern"]
    },
    "IGeoIconStyle": {
      "type": "object",
      "properties": {
        "size": {
          "description": "Size in pixels.  If the icon is not square, the size will represent the larger value of the rectangle",
          "type": "number",
          "minimum": 1
        },
        "offSetX": {
          "description": "X Offest of icon in pixels derived from the lower left point of the icon",
          "type": "number",
          "default": 0
        },
        "offSetY": {
          "description": "X Offest of icon in pixels derived from the lower left point of the icon",
          "type": "number",
          "default": 0
        }
      },
      "required": ["size", "offSetX", "offSetY"]
    },
    "IGeoLabelStyle": {
      "type": "object",
      "properties": {
        "scale": {
          "description": "Multiplier for the size of text displayed as the label",
          "type": "number",
          "default": 1
        },
        "color": {
          "$ref": "#/definitions/IGeoColor"
        }
      },
      "required": ["scale"]
    },

    "IGeoBase": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is used to display text labels alonside to a feature and can be used in user interfaces that manage the data on the map",
          "default": ""
        },
        "id": {
          "description": "The id value should be a UUID (see https://www.ietf.org/rfc/rfc4122.txt) to avoid conflict of data from multiple sources.  All id values SHALL be unique regardless of type and conflicting id values will be treated as the same element",
          "type": "string"
        },
        "description": {
          "type": "string",
          "default": ""
        },
        "readOnly": {
          "type": "boolean",
          "deafult": "false"
        }
      },
      "required": ["name", "id", "description", "readOnly"]
    },
    "IGeoContainer": {
      "type": "object",
      "allOf": [{
        "$ref": "#/definitions/IGeoBase"
      }, {
        "properties": {
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/IGeoBase"
            }
          }
        },
        "required": ["children"]
      }]
    },
    "IGeoRenderable": {
      "type": "object",
      "allOf": [{
        "$ref": "#/definitions/IGeoContainer"
      }, {
        "$ref": "#/definitions/IGeoPositionGroup"
      }, {
        "properties": {
          "labelStyle": {
            "$ref": "#/definitions/IGeoLabelStyle"
          },
          "extrude": {
            "type": "boolean",
            "default": false,
            "description": "A curtain is formed below each point or line segemnt and extends to the ground"
          },
          "tessalate": {
            "type": "boolean",
            "default": true,
            "description": "Value determines if the item will follow the terrain and drape, or follow a straight plane cutting through terrain above the altitude of the line segment.  This property is ignored for single position items."
          },
          "buffer": {
            "type": "number",
            "description": "Indicates if a buffer object in meters can be applied to a single, or list of positions as an extension outwards from the original position(s)",
            "default" : 0
          },
          "azimuth": {
            "type": "number",
            "minimum": 0,
            "maximum": 359,
            "default": 0
          }
        },
        "required": ["labelStyle"]
      }]
    },
    "IGeoPoint": {
      "allOf": [{
        "$ref": "#/definitions/IGeoRenderable"
      }, {
        "properties": {
          "iconStyle": {
            "$ref": "#/definitions/IGeoIconStyle"
          },
          "iconURI": {
            "type": "string",
            "description": "Indicates the URL to request the icon image image or dataURI encoding of the icon image embedded as the value defined by RFC 2397 (see https://tools.ietf.org/html/rfc2397)"
          }
        },
        "required": ["iconStyle"]
      }]
    },
    "IGeoText": {
      "allOf": [{
        "$ref": "#/definitions/IGeoRenderable"
      }]
    },
    "IGeoPath": {
      "allOf": [{
        "$ref": "#/definitions/IGeoRenderable"
      }, {
        "properties": {
          "strokeStyle": {
            "$ref": "#/definitions/IGeoStrokeStyle"
          }
        },
        "required": ["strokeStyle"]
      }]
    },
    "IGeoSurface": {
      "allOf": [{
        "$ref": "#/definitions/IGeoRenderable"
      }, {
        "properties": {
          "strokeStyle": {
            "$ref": "#/definitions/IGeoStrokeStyle"
          },
          "fillStyle": {
            "$ref": "#/definitions/IGeoFillStyle"
          }
        },
        "required": ["strokeStyle", "fillStyle"]
      }]
    },
    "IGeoPolygon": {
      "allOf": [{
        "$ref": "#/definitions/IGeoSurface"
      }]
    },
    "IGeoCircle": {
      "allOf": [{
        "$ref": "#/definitions/IGeoSurface"
      }, {
        "properties": {
          "radius": {
            "description": "Radius of the circle in meters",
            "type": "number",
            "default": 100
          }
        },
        "required": ["radius"]
      }]
    },
    "IGeoEllipse": {
      "allOf": [{
        "$ref": "#/definitions/IGeoSurface"
      }, {
        "properties": {
          "semiMajor": {
            "description": "The magnitude of the semi-major axis - Radius of the ellipse in meters on the x axis (width)",
            "type": "number",
            "default": 100
          },
          "semiMinor": {
            "description": "The magnitude of the semi-minor axis - Radius of the ellipse in meters on the y axis (height)",
            "type": "number",
            "default": 50
          }
        },
        "required": ["semiMajor", "semiMinor"]
      }]
    },
    "IGeoRectangle": {
      "allOf": [{
        "$ref": "#/definitions/IGeoSurface"
      }, {
        "properties": {
          "width": {
            "description": "Width of the rectangle in meters on the x axis",
            "type": "number"
          },
          "height": {
            "description": "Height of the rectangle in meters on the y axis",
            "type": "number"
          }
        },
        "required": ["width", "height"]
      }]
    },
    "IGeoSquare": {
      "allOf": [{
        "$ref": "#/definitions/IGeoSurface"
      }, {
        "properties": {
          "width": {
            "description": "Width of the square in meters on the x axis ",
            "type": "number"
          }
        },
        "required": ["width"]
      }]
    },
    "IGeoImageOverlay": {
      "allOf": [{
        "$ref": "#/definitions/IGeoRenderable"
      }, {
        "properties": {
          "imageURI": {
            "type": "string",
            "description": "Indicates the URL to request the image or dataURI encoding of the icon image embedded as the value defined by RFC 2397 (see https://tools.ietf.org/html/rfc2397)"
          }
        }
      }]
    },
    "IGeoMilModifier": {
      "type": "object",
      "description": "Defines a specific modifier from MIL-STD-2525 based on an enumeration of options",
      "properties": {
        "milModifierName": {
          "desciption": "Value of the MIL-STD-2525 modifier name from an enumeration of options",
          "enum": ["A", "B", "C", "D", "E", "F", "G", "H", "H1", "H2", "J", "K", "L", "M", "N", "P", "Q", "R", "R2", "S", "T", "T1", "V", "W", "W1", "X", "Y", "AA", "AB", "AC", "AD", "AE", "AF", "AG", "AH", "AI", "AJ", "AK", "AL", "AM", "AN", "AO", "CC", "CN", "SCC"]
        },
        "value": {
          "description": "MIL-STD-2525 modifier values often allow for multiple types such as in one case a single integer which can also be repsresented as an array of integers.  In order to avoid exterme complication and consitional logic in a schema, the value can be represented as a JSON simple type.  The MIL-STD-2525 rendering solution can translate the JSON sting into the appropriate runtime data type",
          "type": "string"
        }
      }
    },
    "IGeoAirControlMeasureModifier": {
      "type": "object",
      "properties": {
        "acmModifierName": {
          "enum": ["RADIUS", "INNER_RADIUS", "TURN", "MIN_ALT", "MAX_ALT", "LEFT_AZIMUTH", "RIGHT_AZIMUTH", "WIDTH", "LEFT_WIDTH", "RIGHT_WIDTH"]
        },
        "value": {
          "description": "",
          "type": "string"
        }
      }
    },
    "IGeoMilSymbol": {
      "allOf": [{
        "$ref": "#/definitions/IGeoRenderable"
      }, {
        "properties": {
          "symbolStandard": {
            "description": "Version of the MIL-STD-2525 standard to use",
            "enum": ["MIL_STD_2525C", "MIL_STD_2525B"],
            "type": "string"
          },
          "symbolCode": {
            "description": "Symbol code as defined by MIL-STD-2525",
            "type": "string"
          },
          "modifiers": {
            "type": "array",
            "description": "List of modifiers elements defining symbol per MIL-STD-2525",
            "items": {
              "$ref": "#/definitions/IGeoMilModifier"
            }
          }
        },
        "required": ["symbolStandard", "symbolCode", "modifiers"]
      }]
    },
    "IGeoAirControlMeasure": {
      "allOf": [{
        "$ref": "#/definitions/IGeoSurface"
      }, {
        "properties": {
          "acmType": {
            "description": "Symbol code as defined by MIL-STD-2525",
            "enum": ["ROUTE", "CYLINDER", "ORBIT", "POLYGON", "RADARC", "POLYARC", "TRACK", "CURTAIN"]
          },
          "acmAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/IGeoAirControlMeasureModifier"
            }
          }
        },
        "required": ["acmType", "acmAttributes"]
      }]
    },
    "IGeoDocument": {
      "description": "",
      "allOf": [{
        "$ref": "#/definitions/IGeoBase"
      }, {
        "properties": {
          "documentURI": {
            "description": "URL the document should be loaded from, or a dataURI encoding of the resource embedded as the value defined by RFC 2397 (see https://tools.ietf.org/html/rfc2397)",
            "type": "string"
          },
          "documentMIMEType": {
            "description": "MIME Type of document.  Common Types are KML (application/vnd.google-earth.kml+xml), and GeoJSON (application/vnd.geo+json)",
            "type": "string"
          }
        },
        "required": ["documentURI", "documentType"]
      }]
    }
  },
  "type": "object",
  "anyOf": [{
    "$ref": "#/definitions/IGeoContainer"
  }, {
    "$ref": "#/definitions/IGeoRenderable"
  }, {
    "$ref": "#/definitions/IGeoPoint"
  }, {
    "$ref": "#/definitions/IGeoPath"
  }, {
    "$ref": "#/definitions/IGeoPolygon"
  }, {
    "$ref": "#/definitions/IGeoRectangle"
  }, {
    "$ref": "#/definitions/IGeoEllipse"
  }, {
    "$ref": "#/definitions/IGeoImageOverlay"
  }, {
    "$ref": "#/definitions/IGeoDocument"
  }, {
    "$ref": "#/definitions/IGeoMilSymbol"
  }, {
    "$ref": "#/definitions/IGeoAirControlMeasure"
  }]
}
