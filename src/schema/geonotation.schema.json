{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "definitions": {
    "IGeoAltitudeMode": {
      "type": "object",
      "description": "Define how the alititude value in an IGeoLocation alt (altitude) property will be interpreted",
      "properties": {
        "description": "Enumeration of altitutde modes",
        "altitudeMode": {
          "enum": ["clampToGround", "relativeToGround", "absolute"]
        },
        "required": ["altitudeMode"]
      }
    },
    "IGeoTimeStamp": {
      "type": "object",
      "description": "Defines a point in time that something occured, was created, or was last updated.",
      "properties": {
        "when": {
          "description": "value in epoc milliseconds in UTC with a 0 offset - ZULU Time",
          "type": "number"
        }
      },
      "required": ["when"]
    },
    "IGeoTimeSpan": {
      "type": "object",
      "description": "Defines a range in time that represents a beginning and end.",
      "properties": {
        "begin": {
          "description": "staring date time value in epoc milliseconds in UTC with a 0 offset - ZULU Time",
          "type": "number"
        },
        "end": {
          "description": "ending date time value in epoc milliseconds in UTC with a 0 offset - ZULU Time",
          "type": "number"
        }
      },
      "required": ["begin", "end"]
    },
    "IGeoLocation": {
      "type": "object",
      "description": "Defines a specific geospatial location derived using WGS-84 latitude Longitude",
      "properties": {
        "lat": {
          "description": "Latitude value in degrees decimal (i.e. 23.4567) derived from a WGS-84 datum",
          "type": "number",
          "minimum": -90,
          "maximum": 90
        },
        "lon": {
          "type": "number",
          "minimum": -180,
          "maximum": 180
        },
        "alt": {
          "type": "number",
          "description": "A value in meters representing the altitude of the associated location.  This will be interpreted base on the altitudeMode provided in the IGeoAltitudeMode enumeration"
        }
      },
      "required": ["lat", "lon", "alt"]
    },
    "IGeoLocationList": {
      "type": "object",
      "description": "An ordered list of Locations representing a 1 or more Locations with an associated IGeoAltitudeMode to interpret the altitude values.  In the case of a point, a inslge Location will create a single icon, wheras mulitple locations will create the same icon at multiple locations to be interpreted as a composite feature. For consistency, and IGeoRenderables use an IGeoLocationList even when only containing a single location",
      "allOf": [{
        "$ref": "#/definitions/IGeoAltitudeMode"
      }, {
        "properties": {
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/IGeoLocation"
            }
          },
          "required": ["locations"]
        }
      }]
    },
    "IGeoLocationListTime": {
      "type": "object",
      "description": "An location with a timestamp associated to it",
      "allOf": [{
        "$ref": "#/definitions/IGeoLocationList"
      }, {
        "$ref": "#/definitions/IGeoTimeStamp"
      }]
    },
    "IGeoLocationHistory": {
      "type": "object",
      "description": "An ordered collection of IGeoLocationListTime obejcts.  These are the same as IGeoLocationList with the addition of a required timestamp field 'when' indicating the date and time the locations were recorded",
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IGeoLocationListTime"
          }
        }
      }
    },
    "IGeoCamera": {
      "type": "object",
      "description": "Defines the virtual camera that views the scene. This element defines the position of the camera relative to the Earth's surface as well as the viewing direction of the camera. The camera position is defined by <longitude>, <latitude>, <altitude>, and either <altitudeMode>. The viewing direction of the camera is defined by <heading>, <tilt>, and <roll>. An IGeoCamera provides full six-degrees-of-freedom control over the view, so you can position the Camera in space and then rotate it around the X, Y, and Z axes. Most importantly, you can tilt the camera view so that you're looking above the horizon into the sky. The order of rotation is important. By default, the camera is looking straight down the −Z axis toward the Earth. Before rotations are performed, the camera is translated along the Z axis to <altitude>. The order of transformations is as follows: <altitude> - translate along the Z axis to <altitude><heading> - rotate around the Z axis.<tilt> - rotate around the X axis.<roll> - rotate around the Z axis (again). Note that each time a rotation is applied, two of the camera axes change their orientation.",
      "allOf": [{
        "$ref": "#/definitions/IGeoAltitudeMode"
      }, {
        "$ref": "#/definitions/IGeoLocation"
      }, {
        "properties": {
          "tilt": {
            "type": "number",
            "description": "Rotation, in degrees, of the camera around the X axis. A value of 0 indicates that the view is aimed straight down toward the earth (the most common case). A value for 90 for <tilt> indicates that the view is aimed toward the horizon. Values greater than 90 indicate that the view is pointed up into the sky. Values for <tilt> are clamped at +180 degrees",
            "minimum": 0,
            "maximum": 179
          },
          "roll": {
            "type": "number",
            "minimum": 0,
            "maximum": 179,
            "description": "Rotation, in degrees, of the camera around the Z axis. Values range from −180 to +180 degrees"
          },
          "heading": {
            "type": "number",
            "minimum": 0,
            "maximum": 359,
            "description": "Direction (that is, North, South, East, West), in degrees. Default=0 (North). Values range from 0 to 360 degrees"
          },
          "range": {
            "type": "number",
            "description": "Distance in meters from the point specified by <longitude>, <latitude>, and <altitude> to the LookAt position"
          }
        }
      }],
      "required": ["lat", "lon", "alt", "heading"]
    },
    "IGeoLookAt": {
      "type": "object",
      "description": "The LookAt element positions the 'camera' in relation to the IGeoLocation that is being viewed",
      "allOf": [{
        "$ref": "#/definitions/IGeoAltitudeMode"
      }, {
        "$ref": "#/definitions/IGeoLocation"
      }, {
        "properties": {
          "tilt": {
            "type": "number",
            "description": "Rotation, in degrees, of the camera around the X axis. A value of 0 indicates that the view is aimed straight down toward the earth (the most common case). A value for 90 for <tilt> indicates that the view is aimed toward the horizon. Values greater than 90 indicate that the view is pointed up into the sky. Values for <tilt> are clamped at +180 degrees. ",
            "minimum": 0,
            "maximum": 179
          },
          "heading": {
            "type": "number",
            "minimum": 0,
            "maximum": 359,
            "description": "Direction (that is, North, South, East, West), in degrees. Default=0 (North). (See diagram below.) Values range from 0 to 360 degrees"
          },
          "range": {
            "type": "number",
            "description": "Distance in meters from the point specified by IGeoLocation to the LookAt position"
          }
        }
      }],
      "required": ["lat", "lon", "alt", "heading"]
    },
    "IGeoBounds": {
      "type": "object",
      "properties": {
        "left": {
          "type": "number",
          "minimum": -180,
          "maximum": 180
        },
        "right": {
          "type": "number",
          "minimum": -180,
          "maximum": 180
        },
        "top": {
          "type": "number",
          "minimum": -90,
          "maximum": 90
        },
        "bottom": {
          "type": "number",
          "minimum": -90,
          "maximum": 90
        }
      },
      "required": ["left", "right", "top", "bottom"]
    },
    "IGeoLineStyle": {
      "type": "object",
      "properties": {
        "LineColor": {
          "$ref": "#/definitions/IGeoColor"
        },
        "linePattern": {
          "enum": ["solid", "dashed", "dotted"]
        }
      },
      "required": ["lineColor", "linePattern"]
    },
    "IGeoPolyStyle": {
      "type": "object",
      "properties": {
        "fillColor": {
          "$ref": "#/definitions/IGeoColor"
        },
        "fillPattern": {
          "enum": ["solid", "dashed", "dotted"]
        }
      },
      "required": ["fillColor"]
    },
    "IGeoIconStyle": {
      "type": "object",
      "properties": {
        "size": {
          "description": "Pixel size in pixels.  If the icon is not square, the size will represent the larger value of the rectangle",
          "type": "number",
          "minimum": 1
        },
        "offSetX": {
          "description": "X Offest of icon in pixels derived from the lower left point of the icon",
          "type": "number",
          "default": 0
        },
        "offSetY": {
          "description": "X Offest of icon in pixels derived from the lower left point of the icon",
          "type": "number",
          "default": 0
        }
      },
      "required": ["size", "offSetX", "offSetY"]
    },
    "IGeoBufferable": {
      "type": "object",
      "description": "Indicates if a buffer object in meters can be applied to a single, or list of locations as an extension outwards from the original location(s)",
      "properties": {
        "buffer": {
          "type": "number"
        }
      },
      "required": ["buffer"]
    },
    "IGeoRotatable": {
      "type": "object",
      "description": "Indicates an angle in degress to rotate the item",
      "properties": {
        "rotation": {
          "type": "number",
          "minimum": 0,
          "maximum": 359
        }
      },
      "required": ["rotation"]
    },
    "IGeoImage": {
      "type": "object",
      "properties": {
        "description": "Indicates the URL to request the icon image image or dataURI encoding of the icon image embedded as the value defined by RFC 2397 (see https://tools.ietf.org/html/rfc2397)",
        "imageURI": {
          "type": "string"
        },
        "alpha": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        }
      },
      "required": ["imageURI", "alpha"]
    },
    "IGeoBase": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "description": "The id value shuld be a UUID (see https://www.ietf.org/rfc/rfc4122.txt) to avoid conflict of data from multiple sources.  All id values SHALL be unique regardless of type and conflicting id values will be treated as the same element",
          "type": "string"
        },
        "description": {
          "type": "string",
          "default": ""
        }
      },
      "required": ["name", "id", "description"]
    },
    "IGeoContainer": {
      "type": "object",
      "allOf": [{
        "$ref": "#/definitions/IGeoBase"
      }, {
        "properties": {
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/IGeoContainer"
            }
          }
        },
        "required": ["children"]
      }]
    },
    "IGeoRenderable": {
      "type": "object",
      "allOf": [{
        "$ref": "#/definitions/IGeoLocationList"
      }, {
        "$ref": "#/definitions/IGeoContainer"
      }]
    },
    "IGeoPoint": {
      "allOf": [{
        "$ref": "#/definitions/IGeoRenderable"
      }, {
        "$ref": "#/definitions/IGeoImage"
      }, {
        "$ref": "#/definitions/IGeoBufferable"
      }, {
        "properties": {
          "iconStyle": {
            "$ref": "#/definitions/IGeoIconStyle"
          }
        },
        "required": ["iconStyle"]
      }]
    },
    "IGeoLine": {
      "allOf": [{
        "$ref": "#/definitions/IGeoRenderable"
      }, {
        "$ref": "#/definitions/IGeoBufferable"
      }, {
        "properties": {
          "lineStyle": {
            "$ref": "#/definitions/IGeoLineStyle"
          }
        },
        "required": ["lineStyle"]
      }]
    },
    "IGeoSurface": {
      "allOf": [{
        "$ref": "#/definitions/IGeoRenderable"
      }, {
        "$ref": "#/definitions/IGeoBufferable"
      }, {
        "properties": {
          "lineStyle": {
            "$ref": "#/definitions/IGeoLineStyle"
          },
          "polyStyle": {
            "$ref": "#/definitions/IGeoPolyStyle"
          }
        },
        "required": ["lineStyle", "polyStyle"]
      }]
    },
    "IGeoPolygon": {
      "allOf": [{
        "$ref": "#/definitions/IGeoSurface"
      }, {
        "$ref": "#/definitions/IGeoBufferable"
      }]
    },
    "IGeoEllipse": {
      "allOf": [{
        "$ref": "#/definitions/IGeoSurface"
      }, {
        "$ref": "#/definitions/IGeoRotatable"
      }, {
        "properties": {
          "majorRadius": {
            "description": "Radius of the ellipse in meters on the x axis (width).  For a square make the major and minor radius the same value",
            "type": "number"
          },
          "minorRadius": {
            "description": "Radius of the ellipse in meters on the y axis (height).  For a square make the major and minor the same value",
            "type": "number"
          }
        },
        "required": ["majorRadius", "minorRadius"]
      }]
    },
    "IGeoRectangle": {
      "allOf": [{
        "$ref": "#/definitions/IGeoSurface"
      }, {
        "$ref": "#/definitions/IGeoRotatable"
      }, {
        "properties": {
          "majorRadius": {
            "description": "Radius of the rectangle in meters on the x axis (width).  For a circle make the major and minor radius the same value",
            "type": "number"
          },
          "minorRadius": {
            "description": "Radius of the rectangle in meters on the y axis (height).  For a circle make the major and minor the same value",
            "type": "number"
          }
        },
        "required": ["majorRadius", "minorRadius"]
      }]
    },
    "IGeoImageOverlay": {
      "allOf": [{
        "$ref": "#/definitions/IGeoRenderable"
      }, {
        "$ref": "#/definitions/IGeoImage"
      }]
    },
    "IGeoMilModifer": {
      "type": "object",
      "description" : "Defines a specific modifier from MIL-STD-2525 based on an enumeration of options",
      "properties": {
        "milModifierName": {
          "desciption": "Value of the MIL-STD-2525 modifier name from an enumeration of options",
          "enum": ["A", "B", "C", "D", "E", "F", "G", "H", "H1", "H2", "J", "K", "L", "M", "N", "P", "Q", "R", "R2", "S", "T", "T1", "V", "W", "W1", "X", "Y", "AA", "AB", "AC", "AD", "AE", "AF", "AG", "AH", "AI", "AJ", "AK", "AL", "AM", "AN", "AO", "CC", "CN", "SCC"]
        },
        "value": {
          "description": "MIL-STD-2525 modifier values often allow for multiple types such as in one case a single integer which can also be repsresented as an array of integers.  In order to avoid exterme complication and consitional logic in a schema, the value can be represented as a JSON simple type.  The MIL-STD-2525 rendering solution can translate the JSON sting into the appropriate runtime data type",
          "type": "string"
        }
      }
    },
    "IGeoACMModifer": {
      "type": "object",
      "properties": {
        "acmModifierName": {
          "enum": ["RADIUS", "INNER_RADIUS", "TURN", "MIN_ALT", "MAX_ALT", "LEFT_AZIMUTH", "RIGHT_AZIMUTH", "WIDTH", "LEFT_WIDTH", "RIGHT_WIDTH", "ALTITUDE_MODE"]
        },
        "value": {
          "description": "",
          "type": "string"
        }
      }
    },
    "IGeoMilSymbol": {
      "allOf": [{
        "$ref": "#/definitions/IGeoRenderable"
      }, {
        "properties": {
          "symbolStadard": {
            "description": "Version of the MIL-STD-2525 standard to use",
            "enum": ["2525C", "2525B"],
            "type": "string"
          },
          "symbolCode": {
            "description": "Symbol code as defined by MIL-STD-2525",
            "default": "2525C"
          },
          "modifiers": {
            "type": "array",
            "description" : "List of modifiers elements defining symbol per MIL-STD-2525",
            "items": {
              "$ref": "#/definitions/IGeoMilModfier"
            }
          }
        },
        "required": ["symbolCode", "modifiers"]
      }]
    },
    "IGeoACM": {
      "allOf": [{
        "$ref": "#/definitions/IGeoSurface"
      }, {
        "properties": {
          "acmType": {
            "description": "Symbol code as defined by MIL-STD-2525",
            "enum": ["ROUTE", "CYLINDER", "ORBIT", "POLYGON", "RADARC", "POLYARC", "TRACK", "CURTAIN"]
          },
          "acmAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/IGeoACMModfier"
            }
          }
        },
        "required": ["symbolCode", "modifiers"]
      }]
    },
    "IGeoDocument": {
      "description": "",
      "allOf": [{
        "$ref": "#/definitions/IGeoBase"
      }, {
        "properties": {
          "documentURI": {
            "description": "URL the document should be loaded from, or a dataURI encoding of the resource embedded as the value defined by RFC 2397 (see https://tools.ietf.org/html/rfc2397)",
            "type": "string"
          },
          "documentType": {
            "description": "Type of document",
            "enum": ["KML", "GEOJSON"]
          }
        },
        "required": ["documentURI", "documentType"]
      }]
    }
  },
  "type": "object",
  "anyOf": [{
    "$ref": "#/definitions/IGeoContainer"
  }, {
    "$ref": "#/definitions/IGeoRenderable"
  }, {
    "$ref": "#/definitions/IGeoPoint"
  }, {
    "$ref": "#/definitions/IGeoLine"
  }, {
    "$ref": "#/definitions/IGeoPolygon"
  }, {
    "$ref": "#/definitions/IGeoRectangle"
  }, {
    "$ref": "#/definitions/IGeoEllipse"
  }, {
    "$ref": "#/definitions/IGeoImageOverlay"
  }, {
    "$ref": "#/definitions/IGeoDocument"
  }, {
    "$ref": "#/definitions/IGeoMilSymbol"
  }, {
    "$ref": "#/definitions/IGeoACM"
  }]
}
