{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "definitions": {
    "IGeoAltitudeMode": {
      "properties": {
        "altitudeMode": {
          "description": "Enumeration of altitude modes to define how the altitude value in an IGeoPosition alt (altitude) property will be interpreted",
          "enum": ["CLAMP_TO_GROUND", "RELATIVE_TO_GROUND", "ABSOLUTE"]
        }
      }
    },
    "IGeoTimeSpan": {
      "type": "object",
      "description": "Defines a range in time that represents a beginning and end.  This can be used to describe things such as availability, visibility, active/inactive for provided periods of time.  From a filtering point of view, if a time filter is applied a feature would only be visible on a map view within the defined timespan(s)",
      "properties": {
        "begin": {
          "description": "Starting date time value as defined by http://tools.ietf.org/html/rfc3339",
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "description": "Ending date time value as defined by http://tools.ietf.org/html/rfc3339",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": ["begin", "end"]
    },
    "IGeoPosition": {
      "type": "object",
      "description": "Defines a specific geospatial position derived using WGS-84 latitude longitude",
      "properties": {
        "latitude": {
          "description": "Latitude value in degrees decimal (i.e. 23.4567) derived from WGS-84",
          "type": "number",
          "minimum": -90,
          "maximum": 90,
          "default": 0
        },
        "longitude": {
          "type": "number",
          "description": "Longitude value in degrees decimal (i.e. 23.4567) derived from WGS-84",
          "minimum": -180,
          "maximum": 180,
          "default": 0
        },
        "altitude": {
          "type": "number",
          "description": "A value in meters representing the altitude of the associated position.  This will be interpreted base on the altitudeMode provided in the IGeoAltitudeMode enumeration",
          "default": 0
        }
      },
      "required": ["latitude", "longitude", "altitude"]
    },
    "IGeoPositionGroup": {
      "type": "object",
      "description": "An ordered list of positions representing a 1 or more positions with an associated IGeoAltitudeMode to interpret the altitude values.  In the case of a point, a single position will create a single icon, wheras mulitple positions will create the same icon at multiple positions to be interpreted as a composite feature. For consistency, and IGeoRenderables use an IGeoPositionGroup even when only containing a single position",
      "allOf": [{
        "$ref": "#/definitions/IGeoAltitudeMode"
      }, {
        "properties": {
          "positions": {
            "description": "An ordered list of IGeoPosition objects representing a 1 or more positions with an associated IGeoAltitudeMode to interpret the altitude values.  In the case of a point, a single position will create a single icon, wheras mulitple positions will create the same icon at multiple positions to be interpreted as a composite feature. For consistency, and IGeoRenderables use an IGeoPositionGroup even when only containing a single positions",
            "type": "array",
            "items": {
              "$ref": "#/definitions/IGeoPosition"
            }
          },
          "timeStamp": {
            "description": "Defines a point in time that something occurred, was created, or was last updated time value as defined by http://tools.ietf.org/html/rfc3339",
            "type": "string",
            "format": "date-time"
          },
          "timeSpans": {
            "type": "array",
            "description": "Defines one or more periods of time something occured, or was active.",
            "items": {
              "$ref": "#/definitions/IGeoTimeSpan"
            }
          }
        },
        "required": ["positions"]
      }]
    },
    "IGeoPositionHistory": {
      "type": "object",
      "description": "An ordered collection of IGeoPositionGroup objects",
      "properties": {
        "positionHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IGeoPositionGroup"
          }
        }
      }
    },
    "IGeoCamera": {
      "type": "object",
      "description": "Defines the virtual camera that views the scene. This element defines the position of the camera relative to the Earth's surface as well as the viewing direction of the camera. The camera position is defined by <longitude>, <latitude>, <altitude>, and either <altitudeMode>. The viewing direction of the camera is defined by <azimuth>, <tilt>, and <roll>. An IGeoCamera provides full six-degrees-of-freedom control over the view, so you can position the Camera in space and then rotate it around the X, Y, and Z axes. Most importantly, you can tilt the camera view so that you're looking above the horizon into the sky. The order of rotation is important. By default, the camera is looking straight down the −Z axis toward the Earth. Before rotations are performed, the camera is translated along the Z axis to <altitude>. The order of transformations is as follows: <altitude> - translate along the Z axis to <altitude><azimuth> - rotate around the Z axis.<tilt> - rotate around the X axis.<roll> - rotate around the Z axis (again). Note that each time a rotation is applied, two of the camera axes change their orientation.",
      "allOf": [{ "$ref": "#/definitions/IGeoBase" }, {
        "$ref": "#/definitions/IGeoAltitudeMode"
      }, {
        "$ref": "#/definitions/IGeoPosition"
      }, {
        "properties": {
          "tilt": {
            "type": "number",
            "description": "Rotation, in degrees, of the camera around the X axis. A value of 0 indicates that the view is aimed straight down toward the earth (the most common case). A value for 90 for <tilt> indicates that the view is aimed toward the horizon. Values greater than 90 indicate that the view is pointed up into the sky. Values for <tilt> are clamped at +180 degrees",
            "minimum": 0,
            "maximum": 179,
            "default": 0
          },
          "roll": {
            "type": "number",
            "minimum": 0,
            "maximum": 179,
            "default": 0,
            "description": "Rotation, in degrees, of the camera around the Z axis. Values range from −180 to +180 degrees"
          },
          "heading": {
            "type": "number",
            "minimum": 0,
            "maximum": 359,
            "default": 0,
            "description": "Direction (that is, North, South, East, West), in degrees. Default=0 (North). Values range from 0 to 360 degrees"
          }
        }
      }],
      "required": ["tilt", "roll", "heading"]
    },
    "IGeoLookAt": {
      "type": "object",
      "description": "The LookAt element positions the 'camera' in relation to the IGeoPosition that is being viewed",
      "allOf": [{ "$ref": "#/definitions/IGeoBase" }, {
        "$ref": "#/definitions/IGeoAltitudeMode"
      }, {
        "$ref": "#/definitions/IGeoPosition"
      }, {
        "properties": {
          "tilt": {
            "type": "number",
            "description": "Rotation, in degrees, of the camera around the X axis. A value of 0 indicates that the view is aimed straight down toward the earth (the most common case). A value for 90 for <tilt> indicates that the view is aimed toward the horizon. Values greater than 90 indicate that the view is pointed up into the sky. Values for <tilt> are clamped at +180 degrees. ",
            "minimum": 0,
            "maximum": 179,
            "default": 0
          },
          "heading": {
            "type": "number",
            "minimum": 0,
            "maximum": 359.99,
            "default": 0,
            "description": "Direction (that is, North, South, East, West), in degrees. Default=0 (North). Values range from 0 to 360 degrees"
          },
          "range": {
            "type": "number",
            "default": 1000000,
            "description": "Distance in meters from the point specified by IGeoPosition to the LookAt position"
          }
        }
      }],
      "required": ["tilt", "heading", "range"]
    },
    "IGeoBounds": {
      "type": "object",
      "properties": {
        "west": {
          "type": "number",
          "minimum": -180,
          "maximum": 180
        },
        "east": {
          "type": "number",
          "minimum": -180,
          "maximum": 180
        },
        "north": {
          "type": "number",
          "minimum": -90,
          "maximum": 90
        },
        "south": {
          "type": "number",
          "minimum": -90,
          "maximum": 90
        }
      },
      "required": ["west", "east", "north", "south"]
    },
    "IGeoView": {
      "type": "object",
      "properties": {
        "camera": {
          "$ref": "#/definitions/IGeoCamera"
        },
        "lookAt": {
          "$ref": "#/definitions/IGeoLookAt"
        },
        "bounds": {
          "$ref": "#/definitions/IGeoBounds"
        },
        "scale": {
          "type": "number",
          "description": "Approximate map scale of current view"
        }
      }
    },
    "IGeoColor": {
      "description":"Object containing three color channels for red, green, and blue as well as an alpha channel for opacity",
      "type": "object",
      "properties": {
        "red": {
          "description":"Value for red color channel. Integer ranging between 0 and 255",
          "type": "number",
          "format":"int",
          "minimum": 0,
          "maximum": 255,
          "default": 0
        },
        "green": {
          "description":"Value for green color channel. Integer ranging between 0 and 255",
          "type": "number",
          "format":"int",
          "minimum": 0,
          "maximum": 255,
          "default": 0
        },
        "blue": {
          "description":"Value for blue color channel. Integer ranging between 0 and 255",
          "type": "number",
          "minimum": 0,
          "format":"int",
          "maximum": 255,
          "default": 0
        },
        "alpha": {
          "description":"Value for alpha channel to control opacity. Decimal ranging from 0 to 1",
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "default": 0.8
        }
      },
      "required": ["red", "green", "blue", "alpha"]
    },
    "IGeoStrokeStyle": {
      "description":"",
      "type": "object",
      "properties": {
        "strokeColor": {
          "description":"Color of a path, or outline color of a feature such as a polygon or circle.  The fill and stroke can be set separtely to create a contract between the stroke and fill of any feature",
          "$ref": "#/definitions/IGeoColor"
        },
        "strokePattern": {
          "enum": ["solid", "dashed", "dotted"],
          "default": "solid"
        },
        "strokeWidth": {
          "type": "number",
          "description": "Width of the stroke on the screen in pixels",
          "default": 3
        }

      },
      "required": ["strokeColor", "strokePattern", "strokeWidth"]
    },
    "IGeoFillStyle": {
      "description" : "Style porperties for the fill of a feature.  this can either be the interior of a shape such as a polygon or circle, or can also be applied to the fill of an a MIL-STD-2525 Icon to override the default affiliation color",
      "type": "object",
      "properties": {
         "description":"The interior color of a feature such as a polygon or circle.  The fill and stroke can be set separtely to create a contract between the stroke and fill of any feature",
         
        "fillColor": {
          "$ref": "#/definitions/IGeoColor"
        },
        "fillPattern": {
          "description": "Fill patterns allow for alternatives to a solid fill color",
          "enum": ["solid", "hatched", "crossHatched"],
          "default": "solid"
        }
      },
      "required": ["fillColor", "fillPatern"]
    },
    "IGeoIconStyle": {
      "type": "object",
      "properties": {
        "size": {
          "description": "Size in pixels.  If the icon is not square, the size will represent the larger value of the rectangle",
          "type": "number",
          "minimum": 1,
          "default": 32
        },
        "offSetX": {
          "description": "X Offest of icon in pixels derived from the lower left point of the icon",
          "type": "number",
          "default": 0
        },
        "offSetY": {
          "description": "X Offest of icon in pixels derived from the lower left point of the icon",
          "type": "number",
          "default": 0
        }
      },
      "required": ["size", "offSetX", "offSetY"]
    },
    "IGeoLabelStyle": {
      "description":"Style properties for the optional text labels that may display next to feature data on a map",
      "type": "object",
      "properties": {
        "scale": {
          "description": "Multiplier for the size of text displayed as the label",
          "type": "number",
          "default": 1
        },
        "color": {
          "$ref": "#/definitions/IGeoColor"
        },
        "justification": {
          "description": "Position to align text in relation to the associated geospatial coordinate",
          "enum": ["LEFT", "CENTER", "RIGHT"],
          "default": "LEFT"
        }
      },
      "required": ["scale"]
    },

    "IGeoBase": {
      "description":"This is the base object all containers and features are derived from",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is used to display text labels alongside to a feature and can be used in user interfaces that manage the data on the map",
          "default": ""
        },
        "geoId": {
          "description": "The id value should be a UUID (see https://www.ietf.org/rfc/rfc4122.txt) to avoid conflict of data from multiple sources.  All id values SHALL be unique regardless of type and conflicting id values will be treated as the same element",
          "type": "string",
          "readOnly": true,
          "langType": {
            "java": "java.util.UUID",
            "js": "cmapi.randomUUID"
          }
        },
        "dataProviderId": {
          "description": "This is a free form string that can represent an ID specific to this piece of data as it is tracked uniquely by the system providing this data.  This is different from GeoId as the GeoId is of type UUID.  Some systems may use IDs formatted in a way that it cannot be stored in a UUID.  In this case, this property can be used by the system to track this psece of data by the ID they use internally.  The GeoID proerty will be used by CMAPI as the unique ID and this ID is for the benefit of the system providing the data.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description" : "A simple string, or HTML formatted string that can be displayed to describe the IGeoBase.  In the case of a feature the description property can be used to store the content that should display in a pop up window after clicking on a feature.",
          "default": ""
        },
       "properties": {
          "type": "object",
          "readOnly": true,
          "description": "A key value pair where both the key and value where the key is a unique string and the value is an object that can be stored as and read from a string.  In cases where an IGeoBase will be serialized all of the values will be serialized using the objects toString() method.  It is the resposibility of the applications accessing values stored in the properties hash map to determine if the value is in a string format and convert back to whatever object type the string was derived from.  The object should not contain any references to other objects where that relationship is expected to exist beyond copying a current value of a simple type as the relationship will not be properly restored when deserialization occurs.  CMAPI will not use the properties hash for any internal purpose, it will simply allow 3rd party data to pass additional attributes that will stay associated with the CMAPI object as it moves between applications and systems.",
          "langType": {
            "java": "java.util.HashMap<String, Object>"
          }
        }
      },
      "required": ["name", "id", "description", "readOnly"]
    },
    "IGeoContainer": {
      "description":"Geo containers are designed to be a base interface for anything that can contain a children list of IGeoBase objects.  This facilitates the concept of Containers such as overlays, as well as features such as a point that can contain child features.",
      "type": "object",
      "allOf": [{
        "$ref": "#/definitions/IGeoBase"
      }, {
        "properties": {
          "children": {
            "type": "array",
            "readOnly": true,
            "description": "A list of objects that Implment the IGeoBase Interface",
            "items": {
              "$ref": "#/definitions/IGeoBase"
            }
          },
          "readOnly": {
            "type": "boolean",
            "description": "Indicates if the object is intended to be read only (true) or allow changes to the values ot its properties (false)",
            "default": false
          }
        },
        "required": ["children"]
      }]
    },
    "IGeoRenderable": {
      "type": "object",
      "allOf": [{
        "$ref": "#/definitions/IGeoContainer"
      }, {
        "$ref": "#/definitions/IGeoPositionGroup"
      }, {
        "properties": {
          "labelStyle": {
            "$ref": "#/definitions/IGeoLabelStyle"
          },
          "strokeStyle": {
            "$ref": "#/definitions/IGeoStrokeStyle"
          },
          "fillStyle": {
            "$ref": "#/definitions/IGeoFillStyle"
          },
          "extrude": {
            "type": "boolean",
            "default": false,
            "description": "A curtain is formed below each point or line segment and extends to the ground"
          },
          "tessellate": {
            "type": "boolean",
            "default": true,
            "description": "Value determines if the item will follow the terrain and drape, or follow a straight plane cutting through terrain above the altitude of the line segment.  This property is ignored for single position items."
          },
          "buffer": {
            "type": "number",
            "description": "Indicates if a buffer object in meters can be applied to a single, or list of positions as an extension outwards from the original position(s)",
            "default": 0
          },
          "azimuth": {
            "type": "number",
            "minimum": 0,
            "maximum": 359,
            "default": 0
          }
        },
        "required": ["labelStyle"]
      }]
    },
    "IGeoPoint": {
      "allOf": [{
        "$ref": "#/definitions/IGeoRenderable"
      }, {
        "properties": {
          "iconStyle": {
            "$ref": "#/definitions/IGeoIconStyle"
          },
          "iconURI": {
            "type": "string",
            "description": "Indicates the URL to request the icon image image or dataURI encoding of the icon image embedded as the value defined by RFC 2397 (see https://tools.ietf.org/html/rfc2397)"
          }
        },
        "required": ["iconStyle"]
      }]
    },
    "IGeoText": {
      "allOf": [{
        "$ref": "#/definitions/IGeoRenderable"
      }]
    },
    "IGeoPolygon": {
      "allOf": [{
        "$ref": "#/definitions/IGeoRenderable"
      }]
    },
    "IGeoPath": {
      "allOf": [{
        "$ref": "#/definitions/IGeoRenderable"
      }]
    },
    "IGeoCircle": {
      "description": "A circular based forma single geospatial location as the center with a radius in meters",
      "allOf": [{
        "$ref": "#/definitions/IGeoRenderable"
      }, {
        "properties": {
          "radius": {
            "description": "Radius of the circle in meters",
            "type": "number",
            "default": 100
          }
        },
        "required": ["radius"]
      }]
    },
    "IGeoEllipse": {
      "allOf": [{
        "$ref": "#/definitions/IGeoRenderable"
      }, {
        "properties": {
          "semiMajor": {
            "description": "The magnitude of the semi-major axis - Radius of the ellipse in meters on the x axis (width)",
            "type": "number",
            "default": 150
          },
          "semiMinor": {
            "description": "The magnitude of the semi-minor axis - Radius of the ellipse in meters on the y axis (height)",
            "type": "number",
            "default": 75
          }
        },
        "required": ["semiMajor", "semiMinor"]
      }]
    },
    "IGeoRectangle": {
      "allOf": [{
        "$ref": "#/definitions/IGeoRenderable"
      }, {
        "properties": {
          "width": {
            "description": "Width of the rectangle in meters on the x axis",
            "type": "number",
            "default": 150
          },
          "height": {
            "description": "Height of the rectangle in meters on the y axis",
            "type": "number",
            "default": 75
          }
        },
        "required": ["width", "height"]
      }]
    },
    "IGeoSquare": {
      "allOf": [{
        "$ref": "#/definitions/IGeoRenderable"
      }, {
        "properties": {
          "width": {
            "description": "Width of the square in meters on the x axis ",
            "type": "number",
            "default": 100
          }
        },
        "required": ["width"]
      }]
    },
    "IGeoImageOverlay": {
      "allOf": [{
        "$ref": "#/definitions/IGeoRenderable"
      }, {
        "properties": {
          "imageURI": {
            "type": "string",
            "description": "Indicates the URL to request the image or dataURI encoding of the icon image embedded as the value defined by RFC 2397 (see https://tools.ietf.org/html/rfc2397)"
          }
        }
      }]
    },
    "IGeoMilSymbol": {
      "allOf": [{
        "$ref": "#/definitions/IGeoRenderable"
      }, {
        "properties": {
          "symbolStandard": {
            "description": "Version of the MIL-STD-2525 standard to use",
            "enum": ["MIL_STD_2525C", "MIL_STD_2525B"],
            "default": "MIL_STD_2525C"
          },
          "symbolCode": {
            "description": "Symbol code as defined by MIL-STD-2525",
            "type": "string",
            "default": "SUGP-----------"
          },
          "modifiers": {
            "type": "object",
            "langType": {
              "java": "java.util.HashMap<IGeoMilSymbol.Modifier, String>"
            },
            "typeExtension": {
              "type": "enum",
              "name": "modifier"
            },
            "properties": {
              "A": {
                "type": "string",
                "enumLabel": "SYMBOL_ICON"
              },
              "B": {
                "type": "string",
                "enumLabel": "ECHELON"
              },
              "C": {
                "type": "string",
                "enumLabel": "QUANTITY"
              },
              "D": {
                "type": "string",
                "enumLabel": "TASK_FORCE_INDICATOR"
              },
              "E": {
                "type": "string",
                "enumLabel": "FRAME_SHAPE_MODIFIER"
              },
              "F": {
                "type": "string",
                "enumLabel": "REDUCED_OR_REINFORCED"
              },
              "G": {
                "type": "string",
                "enumLabel": "STAFF_COMMENTS"
              },
              "H": {
                "type": "string",
                "enumLabel": "ADDITIONAL_INFO_1"
              },
              "H1": {
                "type": "string",
                "enumLabel": "ADDITIONAL_INFO_2"
              },
              "H2": {
                "type": "string",
                "enumLabel": "ADDITIONAL_INFO_3"
              },
              "J": {
                "type": "string",
                "enumLabel": "EVALUATION_RATING"
              },
              "K": {
                "type": "string",
                "enumLabel": "COMBAT_EFFECTIVENESS"
              },
              "L": {
                "type": "string",
                "enumLabel": "SIGNATURE_EQUIPMENT"
              },
              "M": {
                "type": "string",
                "enumLabel": "HIGHER_FORMATION"
              },
              "N": {
                "type": "string",
                "enumLabel": "HOSTILE"
              },
              "P": {
                "type": "string",
                "enumLabel": "IFF_SIF"
              },
              "Q": {
                "type": "string",
                "enumLabel": "DIRECTION_OF_MOVEMENT"
              },
              "R": {
                "type": "string",
                "enumLabel": "MOBILITY_INDICATOR"
              },
              "R2": {
                "type": "string",
                "enumLabel": "SIGINT_MOBILITY_INDICATOR"
              },
              "S": {
                "type": "string",
                "enumLabel": "OFFSET_INDICATOR"
              },
              "T": {
                "type": "string",
                "enumLabel": "UNIQUE_DESIGNATOR_1"
              },
              "T1": {
                "type": "string",
                "enumLabel": "UNIQUE_DESIGNATOR_2"
              },
              "V": {
                "type": "string",
                "enumLabel": "EQUIPMENT_TYPE"
              },
              "W": {
                "type": "string",
                "enumLabel": "DATE_TIME_GROUP"
              },
              "W1": {
                "type": "string",
                "enumLabel": "DATE_TIME_GROUP_2"
              },
              "X": {
                "type": "string",
                "enumLabel": "ALTITUDE_DEPTH"
              },
              "Y": {
                "type": "string",
                "enumLabel": "LOCATION"
              },
              "Z": {
                "type": "string",
                "enumLabel": "SPEED"
              },
              "AA": {
                "type": "string",
                "enumLabel": "SPECIAL_C2_HEADQUARTERS"
              },
              "AB": {
                "type": "string",
                "enumLabel": "FEINT_DUMMY_INDICATOR"
              },
              "AC": {
                "type": "string",
                "enumLabel": "INSTALLATION"
              },
              "AD": {
                "type": "string",
                "enumLabel": "PLATFORM_TYPE"
              },
              "AE": {
                "type": "string",
                "enumLabel": "EQUIPMENT_TEARDOWN_TIME"
              },
              "AF": {
                "type": "string",
                "enumLabel": "COMMON_IDENTIFIER"
              },
              "AG": {
                "type": "string",
                "enumLabel": "AUXILIARY_EQUIPMENT_INDICATOR"
              },
              "AH": {
                "type": "string",
                "enumLabel": "AREA_OF_UNCERTAINTY"
              },
              "AI": {
                "type": "string",
                "enumLabel": "DEAD_RECKONING"
              },
              "AJ": {
                "type": "string",
                "enumLabel": "SPEED_LEADER"
              },
              "AK": {
                "type": "string",
                "enumLabel": "PAIRING_LINE"
              },
              "AL": {
                "type": "string",
                "enumLabel": "OPERATIONAL_CONDITION"
              },
              "AM": {
                "type": "string",
                "enumLabel": "DISTANCE"
              },
              "AN": {
                "type": "string",
                "enumLabel": "AZIMUTH"
              },
              "AO": {
                "type": "string",
                "enumLabel": "ENGAGEMENT_BAR"
              },
              "CC": {
                "type": "string",
                "enumLabel": "COUNTRY_CODE"
              },
              "SCC": {
                "type": "string",
                "enumLabel": "SONAR_CLASSIFICATION_CONFIDENCE"
              }
            }
          }
        },
        "required": ["symbolStandard", "symbolCode", "modifiers"]
      }]
    },
    "IGeoAirControlMeasure": {
      "description":"Air control meacusures (ACM) represent a three dimensional volume in the air above earth used to indicate where aircarfat should stay within, or stay out of",
      "allOf": [{
        "$ref": "#/definitions/IGeoRenderable"
      }, {
        "properties": {
          "acmType": {
            "description": "Type of air control measure to create",
            "enum": ["ROUTE", "CYLINDER", "ORBIT", "POLYGON", "RADARC", "POLYARC", "TRACK", "CURTAIN"]
          },
          "attributes": {
            "type": "object",
            "langType": {
              "java": "java.util.HashMap<IGeoAirControlMeasure.Attribute, String>"
            },
            "typeExtension": {
              "type": "enum",
              "name": "attribute"
            },
            "properties": {
              "RADIUS": {
                "type": "string"
              },
              "INNER_RADIUS": {
                "type": "string"
              },
              "TURN": {
                "type": "string"
              },
              "MIN_ALT": {
                "type": "string"
              },
              "MAX_ALT": {
                "type": "string"
              },
              "LEFT_AZIMUTH": {
                "type": "string"
              },
              "RIGHT_AZIMUTH": {
                "type": "string"
              },
              "WIDTH": {
                "type": "string"
              },
              "LEFT_WIDTH": {
                "type": "string"
              },
              "RIGHT_WIDTH": {
                "type": "string"
              }
            }
          }
        },
        "required": ["acmType", "attributes"]
      }]
    },
    "IGeoDocument": {
      "description": "File containing geospatil feature data in a known format such as KML or GeoJSON",
      "allOf": [{
        "$ref": "#/definitions/IGeoBase"
      }, {
        "properties": {
          "documentURI": {
            "description": "URL the document should be loaded from, or a dataURI encoding of the resource embedded as the value defined by RFC 2397 (see https://tools.ietf.org/html/rfc2397)",
            "type": "string"
          },
          "documentMIMEType": {
            "description": "MIME Type of document.  Common Types are KML (application/vnd.google-earth.kml+xml), and GeoJSON (application/vnd.geo+json)",
            "type": "string"
          }
        },
        "required": ["documentURI", "documentType"]
      }]
    }
  },
  "type": "object",
  "anyOf": [{
    "$ref": "#/definitions/IGeoContainer"
  }, {
    "$ref": "#/definitions/IGeoRenderable"
  }, {
    "$ref": "#/definitions/IGeoPoint"
  }, {
    "$ref": "#/definitions/IGeoPolygon"
  }, {
    "$ref": "#/definitions/IGeoRectangle"
  }, {
    "$ref": "#/definitions/IGeoEllipse"
  }, {
    "$ref": "#/definitions/IGeoImageOverlay"
  }, {
    "$ref": "#/definitions/IGeoDocument"
  }, {
    "$ref": "#/definitions/IGeoMilSymbol"
  }, {
    "$ref": "#/definitions/IGeoAirControlMeasure"
  }]
}
